# Use the base Dockerfile you provided for the web service
FROM ubuntu:22.04

# Set environment variables for non-interactive installs and production
ENV DEBIAN_FRONTEND=noninteractive \
    RAILS_ENV=production \
    NODE_ENV=production \
    BUNDLE_WITHOUT="development test" \
    BIND="127.0.0.1" \ 
    PORT=3000 \
    SECRET_KEY_BASE=placeholder \
    OTP_SECRET=placeholder \
    VAPID_PRIVATE_KEY=placeholder\
    VAPID_PUBLIC_KEY=placeholder \
    ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=placeholder \
    ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=placeholder \
    ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=placeholder

# Update and install required dependencies, including libidn11-dev for idn-ruby gem
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    curl ffmpeg awscli libvips-tools gnupg apt-transport-https lsb-release ca-certificates imagemagick \
    libpq-dev libxml2-dev libxslt1-dev file git-core \
    g++ libprotobuf-dev protobuf-compiler pkg-config gcc autoconf \
    bison build-essential libssl-dev libyaml-dev libreadline6-dev \
    zlib1g-dev libncurses5-dev libffi-dev libgdbm-dev \
    libidn11-dev nodejs redis-tools && \
    rm -rf /var/lib/apt/lists/*

# Add Node.js repository and install Node.js
RUN curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg && \
    echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list && \
    apt-get update && apt-get install -y --no-install-recommends nodejs && \
    rm -rf /var/lib/apt/lists/*

# Enable Corepack and set up Yarn
RUN corepack enable && yarn set version classic

# Create a mastodon user and group
RUN useradd -m -s /bin/bash mastodon

# Switch to the mastodon user
USER mastodon
WORKDIR /home/mastodon

# Install rbenv and Ruby 3.3.5 for the mastodon user
RUN git clone https://github.com/rbenv/rbenv.git ~/.rbenv && \
    echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc && \
    echo 'eval "$(rbenv init -)"' >> ~/.bashrc && \
    git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build && \
    ~/.rbenv/bin/rbenv install 3.3.5 && \
    ~/.rbenv/bin/rbenv global 3.3.5 && \
    ~/.rbenv/shims/gem install bundler

# Set up rbenv for the current shell
ENV PATH="/home/mastodon/.rbenv/shims:/home/mastodon/.rbenv/bin:$PATH"

# Clone the Mastodon repository and check out the latest release
RUN git clone https://github.com/mastodon/mastodon.git live && \
    cd live && \
    git checkout $(git tag -l | grep '^v[0-9.]*$' | sort -V | tail -n 1)

WORKDIR /home/mastodon/live

# Install Ruby and JavaScript dependencies in production mode
RUN bundle config deployment 'true' && \
    bundle config without 'development test' && \
    bundle install -j$(getconf _NPROCESSORS_ONLN) && \
    yarn install --immutable
RUN RAILS_ENV=production bundle exec rake assets:precompile

# Expose port for the web application
EXPOSE 3000

# Set the entry point to start the web service
CMD ["/home/mastodon/.rbenv/shims/bundle", "exec", "puma", "-C", "config/puma.rb"]